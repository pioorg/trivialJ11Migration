/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package simple.migration;

import simple.migration.dto.Person;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import java.io.StringWriter;
import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;

/**
 * This is just a sample app. Don't try this at prod!
 */
public class App {

    public static void main(String[] args) throws Exception {

        Person alice = new Person("Alice", "Johndottir");
        Person bob = new Person("Bob", "Johnson");
        List<Person> children = Arrays.asList(alice, bob);
        Person john = new Person("John", "Donaldson", children);

        System.out.println("Meet John!");
        System.out.println(john);

        String xml = createXml(john);
        System.out.println("He likes to be serialised");
        System.out.println(xml);

        String base64 = createBase64(john.getFirstName());
        System.out.println("And \"encrypted\"");
        System.out.println(base64);

        deepLookInto(john.getFirstName());

    }

    private static String createXml(Person cecil) throws JAXBException {
        JAXBContext contextObj = JAXBContext.newInstance(Person.class);

        Marshaller marshallerObj = contextObj.createMarshaller();
        marshallerObj.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

        StringWriter writer = new StringWriter();
        marshallerObj.marshal(cecil, writer);
        return writer.toString();
    }

    private static String createBase64(String input) {
        byte[] bytes = input.getBytes();
        System.out.println("// going to base64 ["+bytes.length+"] bytes");
        return new sun.misc.BASE64Encoder().encode(bytes);
    }

    private static void deepLookInto(String input) {
        try {
            Field valueField = String.class.getDeclaredField("value");
            valueField.setAccessible(true);
            char[] actualValue = (char[])valueField.get(input);
            System.out.println("Actual char array in string is: " + Arrays.toString(actualValue));
        } catch (NoSuchFieldException | IllegalAccessException e) {
            e.printStackTrace();
        }
    }
}
